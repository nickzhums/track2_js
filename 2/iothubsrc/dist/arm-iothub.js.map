{"version":3,"file":"arm-iothub.js","sources":["../../common/temp/node_modules/.pnpm/registry.npmjs.org/tslib/1.14.1/node_modules/tslib/tslib.es6.js","../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-asynciterator-polyfill/1.0.0/node_modules/@azure/core-asynciterator-polyfill/dist-esm/index.js","../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-paging/1.1.3/node_modules/@azure/core-paging/dist-esm/src/index.js","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lro/constants.ts","../src/lro/requestUtils.ts","../src/lro/models.ts","../src/lro/bodyPollingStrategy.ts","../src/lro/lroPolicy.ts","../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-lro/1.0.5/node_modules/@azure/core-lro/src/pollOperation.ts","../../common/temp/node_modules/.pnpm/registry.npmjs.org/tslib/2.2.0/node_modules/tslib/tslib.es6.js","../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-lro/1.0.5/node_modules/@azure/core-lro/src/poller.ts","../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/core-lro/1.0.5/node_modules/@azure/core-lro/src/index.ts","../src/lro/operation.ts","../src/lro/azureAsyncOperationStrategy.ts","../src/lro/locationStrategy.ts","../src/lro/passthroughStrategy.ts","../src/lro/lroPoller.ts","../src/operations/iotHubResource.ts","../src/operations/resourceProviderCommon.ts","../src/operations/certificates.ts","../src/operations/iotHub.ts","../src/operations/privateLinkResources.ts","../src/operations/privateEndpointConnections.ts","../src/iotHubClientContext.ts","../src/iotHubClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\"use strict\";\nif (typeof Symbol === undefined || !Symbol.asyncIterator) {\n    Symbol.asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport \"@azure/core-asynciterator-polyfill\";\n","import * as coreHttp from \"@azure/core-http\";\n\nexport const OperationListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetails\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      httpStatusCode: {\n        serializedName: \"httpStatusCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubProperties\",\n    modelProperties: {\n      authorizationPolicies: {\n        serializedName: \"authorizationPolicies\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessSignatureAuthorizationRule\"\n            }\n          }\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipFilterRules: {\n        serializedName: \"ipFilterRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IpFilterRule\"\n            }\n          }\n        }\n      },\n      networkRuleSets: {\n        serializedName: \"networkRuleSets\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkRuleSetProperties\"\n        }\n      },\n      minTlsVersion: {\n        serializedName: \"minTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"privateEndpointConnections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubEndpoints: {\n        serializedName: \"eventHubEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"EventHubProperties\" }\n          }\n        }\n      },\n      routing: {\n        serializedName: \"routing\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingProperties\"\n        }\n      },\n      storageEndpoints: {\n        serializedName: \"storageEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"StorageEndpointProperties\" }\n          }\n        }\n      },\n      messagingEndpoints: {\n        serializedName: \"messagingEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MessagingEndpointProperties\"\n            }\n          }\n        }\n      },\n      enableFileUploadNotifications: {\n        serializedName: \"enableFileUploadNotifications\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      cloudToDevice: {\n        serializedName: \"cloudToDevice\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudToDeviceProperties\"\n        }\n      },\n      comments: {\n        serializedName: \"comments\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceStreams: {\n        serializedName: \"deviceStreams\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubPropertiesDeviceStreams\"\n        }\n      },\n      features: {\n        serializedName: \"features\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionPropertiesDescription\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubLocationDescription\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessSignatureAuthorizationRule: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessSignatureAuthorizationRule\",\n    modelProperties: {\n      keyName: {\n        serializedName: \"keyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rights: {\n        serializedName: \"rights\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"RegistryRead\",\n            \"RegistryWrite\",\n            \"ServiceConnect\",\n            \"DeviceConnect\",\n            \"RegistryRead, RegistryWrite\",\n            \"RegistryRead, ServiceConnect\",\n            \"RegistryRead, DeviceConnect\",\n            \"RegistryWrite, ServiceConnect\",\n            \"RegistryWrite, DeviceConnect\",\n            \"ServiceConnect, DeviceConnect\",\n            \"RegistryRead, RegistryWrite, ServiceConnect\",\n            \"RegistryRead, RegistryWrite, DeviceConnect\",\n            \"RegistryRead, ServiceConnect, DeviceConnect\",\n            \"RegistryWrite, ServiceConnect, DeviceConnect\",\n            \"RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const IpFilterRule: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IpFilterRule\",\n    modelProperties: {\n      filterName: {\n        serializedName: \"filterName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Accept\", \"Reject\"]\n        }\n      },\n      ipMask: {\n        serializedName: \"ipMask\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkRuleSetProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkRuleSetProperties\",\n    modelProperties: {\n      defaultAction: {\n        defaultValue: \"Deny\",\n        serializedName: \"defaultAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applyToBuiltInEventHubEndpoint: {\n        serializedName: \"applyToBuiltInEventHubEndpoint\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      ipRules: {\n        serializedName: \"ipRules\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NetworkRuleSetIpRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkRuleSetIpRule: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkRuleSetIpRule\",\n    modelProperties: {\n      filterName: {\n        serializedName: \"filterName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        defaultValue: \"Allow\",\n        serializedName: \"action\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipMask: {\n        serializedName: \"ipMask\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$\")\n        },\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointConnectionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionProperties\",\n    modelProperties: {\n      privateEndpoint: {\n        serializedName: \"privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubProperties\",\n    modelProperties: {\n      retentionTimeInDays: {\n        serializedName: \"retentionTimeInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      partitionCount: {\n        serializedName: \"partitionCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      partitionIds: {\n        serializedName: \"partitionIds\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        serializedName: \"endpoint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingProperties\",\n    modelProperties: {\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingEndpoints\"\n        }\n      },\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RouteProperties\"\n            }\n          }\n        }\n      },\n      fallbackRoute: {\n        serializedName: \"fallbackRoute\",\n        type: {\n          name: \"Composite\",\n          className: \"FallbackRouteProperties\"\n        }\n      },\n      enrichments: {\n        serializedName: \"enrichments\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnrichmentProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingEndpoints: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingEndpoints\",\n    modelProperties: {\n      serviceBusQueues: {\n        serializedName: \"serviceBusQueues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingServiceBusQueueEndpointProperties\"\n            }\n          }\n        }\n      },\n      serviceBusTopics: {\n        serializedName: \"serviceBusTopics\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingServiceBusTopicEndpointProperties\"\n            }\n          }\n        }\n      },\n      eventHubs: {\n        serializedName: \"eventHubs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingEventHubProperties\"\n            }\n          }\n        }\n      },\n      storageContainers: {\n        serializedName: \"storageContainers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingStorageContainerProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingServiceBusQueueEndpointProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingServiceBusQueueEndpointProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIdentity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIdentity\",\n    modelProperties: {\n      userAssignedIdentity: {\n        serializedName: \"userAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingServiceBusTopicEndpointProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingServiceBusTopicEndpointProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingEventHubProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingEventHubProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingStorageContainerProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingStorageContainerProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"containerName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileNameFormat: {\n        serializedName: \"fileNameFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      batchFrequencyInSeconds: {\n        constraints: {\n          InclusiveMaximum: 720,\n          InclusiveMinimum: 60\n        },\n        serializedName: \"batchFrequencyInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxChunkSizeInBytes: {\n        constraints: {\n          InclusiveMaximum: 524288000,\n          InclusiveMinimum: 10485760\n        },\n        serializedName: \"maxChunkSizeInBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      encoding: {\n        serializedName: \"encoding\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteProperties\",\n    modelProperties: {\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        constraints: {\n          MinItems: 1,\n          MaxItems: 1\n        },\n        serializedName: \"endpointNames\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FallbackRouteProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FallbackRouteProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        constraints: {\n          MinItems: 1,\n          MaxItems: 1\n        },\n        serializedName: \"endpointNames\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnrichmentProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnrichmentProperties\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        constraints: {\n          MinItems: 1\n        },\n        serializedName: \"endpointNames\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StorageEndpointProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageEndpointProperties\",\n    modelProperties: {\n      sasTtlAsIso8601: {\n        serializedName: \"sasTtlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"containerName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const MessagingEndpointProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MessagingEndpointProperties\",\n    modelProperties: {\n      lockDurationAsIso8601: {\n        serializedName: \"lockDurationAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      ttlAsIso8601: {\n        serializedName: \"ttlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      maxDeliveryCount: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxDeliveryCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudToDeviceProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudToDeviceProperties\",\n    modelProperties: {\n      maxDeliveryCount: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxDeliveryCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultTtlAsIso8601: {\n        serializedName: \"defaultTtlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      feedback: {\n        serializedName: \"feedback\",\n        type: {\n          name: \"Composite\",\n          className: \"FeedbackProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const FeedbackProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FeedbackProperties\",\n    modelProperties: {\n      lockDurationAsIso8601: {\n        serializedName: \"lockDurationAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      ttlAsIso8601: {\n        serializedName: \"ttlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      maxDeliveryCount: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxDeliveryCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubPropertiesDeviceStreams: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubPropertiesDeviceStreams\",\n    modelProperties: {\n      streamingEndpoints: {\n        serializedName: \"streamingEndpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionPropertiesDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionPropertiesDescription\",\n    modelProperties: {\n      keySource: {\n        serializedName: \"keySource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"keyVaultProperties\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyVaultKeyProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultKeyProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultKeyProperties\",\n    modelProperties: {\n      keyIdentifier: {\n        serializedName: \"keyIdentifier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubLocationDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubLocationDescription\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"role\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuInfo: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Free\", \"Standard\", \"Basic\"]\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArmIdentity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArmIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned,UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"ArmUserIdentity\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ArmUserIdentity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArmUserIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$\")\n        },\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const TagsResource: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubDescriptionListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubDescriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegistryStatistics: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegistryStatistics\",\n    modelProperties: {\n      totalDeviceCount: {\n        serializedName: \"totalDeviceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabledDeviceCount: {\n        serializedName: \"enabledDeviceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      disabledDeviceCount: {\n        serializedName: \"disabledDeviceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuDescriptionListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuDescriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubSkuDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuDescription\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubSkuInfo\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubCapacity\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubCapacity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubCapacity\",\n    modelProperties: {\n      minimum: {\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"minimum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        serializedName: \"default\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        serializedName: \"scaleType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Automatic\", \"Manual\", \"None\"]\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupsListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EventHubConsumerGroupInfo\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupInfo: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupInfo\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupBodyDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupBodyDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"EventHubConsumerGroupName\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupName: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupName\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobResponseListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobResponseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobResponse\",\n    modelProperties: {\n      jobId: {\n        serializedName: \"jobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTimeUtc: {\n        serializedName: \"startTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      endTimeUtc: {\n        serializedName: \"endTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"enqueued\",\n            \"running\",\n            \"completed\",\n            \"failed\",\n            \"cancelled\"\n          ]\n        }\n      },\n      failureReason: {\n        serializedName: \"failureReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        serializedName: \"statusMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parentJobId: {\n        serializedName: \"parentJobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubQuotaMetricInfoListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubQuotaMetricInfoListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubQuotaMetricInfo\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubQuotaMetricInfo: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubQuotaMetricInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxValue: {\n        serializedName: \"maxValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointHealthDataListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointHealthDataListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EndpointHealthData\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointHealthData: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointHealthData\",\n    modelProperties: {\n      endpointId: {\n        serializedName: \"endpointId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      healthStatus: {\n        serializedName: \"healthStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKnownError: {\n        serializedName: \"lastKnownError\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKnownErrorTime: {\n        serializedName: \"lastKnownErrorTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastSuccessfulSendAttemptTime: {\n        serializedName: \"lastSuccessfulSendAttemptTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastSendAttemptTime: {\n        serializedName: \"lastSendAttemptTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationInputs: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationInputs\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubNameAvailabilityInfo: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubNameAvailabilityInfo\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Invalid\", \"AlreadyExists\"]\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserSubscriptionQuotaListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserSubscriptionQuotaListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UserSubscriptionQuota\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserSubscriptionQuota: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserSubscriptionQuota\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"Name\"\n        }\n      }\n    }\n  }\n};\n\nexport const Name: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestAllRoutesInput: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestAllRoutesInput\",\n    modelProperties: {\n      routingSource: {\n        serializedName: \"routingSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingMessage\"\n        }\n      },\n      twin: {\n        serializedName: \"twin\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwin\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingMessage: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingMessage\",\n    modelProperties: {\n      body: {\n        serializedName: \"body\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appProperties: {\n        serializedName: \"appProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      systemProperties: {\n        serializedName: \"systemProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingTwin: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingTwin\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"any\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwinProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingTwinProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingTwinProperties\",\n    modelProperties: {\n      desired: {\n        serializedName: \"desired\",\n        type: {\n          name: \"any\"\n        }\n      },\n      reported: {\n        serializedName: \"reported\",\n        type: {\n          name: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestAllRoutesResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestAllRoutesResult\",\n    modelProperties: {\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MatchedRoute\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MatchedRoute: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MatchedRoute\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteInput: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteInput\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingMessage\"\n        }\n      },\n      route: {\n        serializedName: \"route\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteProperties\"\n        }\n      },\n      twin: {\n        serializedName: \"twin\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwin\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteResult\",\n    modelProperties: {\n      result: {\n        serializedName: \"result\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Composite\",\n          className: \"TestRouteResultDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteResultDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteResultDetails\",\n    modelProperties: {\n      compilationErrors: {\n        serializedName: \"compilationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RouteCompilationError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RouteCompilationError: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteCompilationError\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      severity: {\n        serializedName: \"severity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorRange\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteErrorRange: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteErrorRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"start\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorPosition\"\n        }\n      },\n      end: {\n        serializedName: \"end\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorPosition\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteErrorPosition: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteErrorPosition\",\n    modelProperties: {\n      line: {\n        serializedName: \"line\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      column: {\n        serializedName: \"column\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessSignatureAuthorizationRuleListResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessSignatureAuthorizationRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessSignatureAuthorizationRule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDevicesRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDevicesRequest\",\n    modelProperties: {\n      exportBlobContainerUri: {\n        serializedName: \"exportBlobContainerUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      excludeKeys: {\n        serializedName: \"excludeKeys\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exportBlobName: {\n        serializedName: \"exportBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportDevicesRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImportDevicesRequest\",\n    modelProperties: {\n      inputBlobContainerUri: {\n        serializedName: \"inputBlobContainerUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outputBlobContainerUri: {\n        serializedName: \"outputBlobContainerUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      inputBlobName: {\n        serializedName: \"inputBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputBlobName: {\n        serializedName: \"outputBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateListDescription\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CertificateDescription\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificateProperties\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateProperties\",\n    modelProperties: {\n      subject: {\n        serializedName: \"subject\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        serializedName: \"expiry\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isVerified: {\n        serializedName: \"isVerified\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      created: {\n        serializedName: \"created\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      updated: {\n        serializedName: \"updated\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateWithNonceDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateWithNonceDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificatePropertiesWithNonce\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificatePropertiesWithNonce: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificatePropertiesWithNonce\",\n    modelProperties: {\n      subject: {\n        serializedName: \"subject\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        serializedName: \"expiry\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isVerified: {\n        serializedName: \"isVerified\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      created: {\n        serializedName: \"created\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      updated: {\n        serializedName: \"updated\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      verificationCode: {\n        serializedName: \"verificationCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      certificate: {\n        serializedName: \"certificate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateVerificationDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateVerificationDescription\",\n    modelProperties: {\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverInput: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FailoverInput\",\n    modelProperties: {\n      failoverRegion: {\n        serializedName: \"failoverRegion\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResources: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResources\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GroupIdInformation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GroupIdInformation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GroupIdInformation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$\")\n        },\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"GroupIdInformationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const GroupIdInformationProperties: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GroupIdInformationProperties\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"requiredMembers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateBodyDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateBodyDescription\",\n    modelProperties: {\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubDescription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubDescription\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubSkuInfo\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ArmIdentity\"\n        }\n      }\n    }\n  }\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-http\";\nimport {\n  IotHubDescription as IotHubDescriptionMapper,\n  TagsResource as TagsResourceMapper,\n  EventHubConsumerGroupBodyDescription as EventHubConsumerGroupBodyDescriptionMapper,\n  OperationInputs as OperationInputsMapper,\n  TestAllRoutesInput as TestAllRoutesInputMapper,\n  TestRouteInput as TestRouteInputMapper,\n  ExportDevicesRequest as ExportDevicesRequestMapper,\n  ImportDevicesRequest as ImportDevicesRequestMapper,\n  CertificateDescription as CertificateDescriptionMapper,\n  CertificateVerificationDescription as CertificateVerificationDescriptionMapper,\n  FailoverInput as FailoverInputMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-03-03-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const iotHubDescription: OperationParameter = {\n  parameterPath: \"iotHubDescription\",\n  mapper: IotHubDescriptionMapper\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const iotHubTags: OperationParameter = {\n  parameterPath: \"iotHubTags\",\n  mapper: TagsResourceMapper\n};\n\nexport const eventHubEndpointName: OperationURLParameter = {\n  parameterPath: \"eventHubEndpointName\",\n  mapper: {\n    serializedName: \"eventHubEndpointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const consumerGroupBody: OperationParameter = {\n  parameterPath: \"consumerGroupBody\",\n  mapper: EventHubConsumerGroupBodyDescriptionMapper\n};\n\nexport const jobId: OperationURLParameter = {\n  parameterPath: \"jobId\",\n  mapper: {\n    serializedName: \"jobId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const iotHubName: OperationURLParameter = {\n  parameterPath: \"iotHubName\",\n  mapper: {\n    serializedName: \"iotHubName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const operationInputs: OperationParameter = {\n  parameterPath: \"operationInputs\",\n  mapper: OperationInputsMapper\n};\n\nexport const input: OperationParameter = {\n  parameterPath: \"input\",\n  mapper: TestAllRoutesInputMapper\n};\n\nexport const input1: OperationParameter = {\n  parameterPath: \"input\",\n  mapper: TestRouteInputMapper\n};\n\nexport const keyName: OperationURLParameter = {\n  parameterPath: \"keyName\",\n  mapper: {\n    serializedName: \"keyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const exportDevicesParameters: OperationParameter = {\n  parameterPath: \"exportDevicesParameters\",\n  mapper: ExportDevicesRequestMapper\n};\n\nexport const importDevicesParameters: OperationParameter = {\n  parameterPath: \"importDevicesParameters\",\n  mapper: ImportDevicesRequestMapper\n};\n\nexport const certificateName: OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n    },\n    serializedName: \"certificateName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateDescription: OperationParameter = {\n  parameterPath: \"certificateDescription\",\n  mapper: CertificateDescriptionMapper\n};\n\nexport const ifMatch1: OperationParameter = {\n  parameterPath: \"ifMatch\",\n  mapper: {\n    serializedName: \"If-Match\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateVerificationBody: OperationParameter = {\n  parameterPath: \"certificateVerificationBody\",\n  mapper: CertificateVerificationDescriptionMapper\n};\n\nexport const failoverInput: OperationParameter = {\n  parameterPath: \"failoverInput\",\n  mapper: FailoverInputMapper\n};\n\nexport const groupId: OperationURLParameter = {\n  parameterPath: \"groupId\",\n  mapper: {\n    serializedName: \"groupId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateEndpointConnection: OperationParameter = {\n  parameterPath: \"privateEndpointConnection\",\n  mapper: PrivateEndpointConnectionMapper\n};\n","import \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\nimport {\n  Operation,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class representing a Operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available IoT Hub REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<Operation[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available IoT Hub REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: coreHttp.OperationOptions\n  ): Promise<OperationsListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listOperationSpec\n    ) as Promise<OperationsListResponse>;\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<OperationsListNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listNextOperationSpec\n    ) as Promise<OperationsListNextResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreHttp.OperationSpec = {\n  path: \"/providers/Microsoft.Devices/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","export const terminalStates = [\"succeeded\", \"failed\", \"canceled\", \"cancelled\"];\n","import { HttpOperationResponse } from \"@azure/core-http\";\nimport { terminalStates } from \"./constants\";\nimport { LROResponseInfo } from \"./models\";\n\n/**\n * We need to selectively deserialize our responses, only deserializing if we\n * are in a final LRO response, not deserializing any polling non-terminal responses\n */\nexport function shouldDeserializeLRO(finalStateVia?: string) {\n  let initialOperationInfo: LROResponseInfo | undefined;\n  let isInitialRequest = true;\n\n  return (response: HttpOperationResponse) => {\n    if (response.status < 200 || response.status >= 300) {\n      return true;\n    }\n\n    if (!initialOperationInfo) {\n      initialOperationInfo = getLROData(response);\n    } else {\n      isInitialRequest = false;\n    }\n\n    if (\n      initialOperationInfo.azureAsyncOperation ||\n      initialOperationInfo.operationLocation\n    ) {\n      return (\n        !isInitialRequest &&\n        isAsyncOperationFinalResponse(\n          response,\n          initialOperationInfo,\n          finalStateVia\n        )\n      );\n    }\n\n    if (initialOperationInfo.location) {\n      return isLocationFinalResponse(response);\n    }\n\n    if (initialOperationInfo.requestMethod === \"PUT\") {\n      return isBodyPollingFinalResponse(response);\n    }\n\n    return true;\n  };\n}\n\nfunction isAsyncOperationFinalResponse(\n  response: HttpOperationResponse,\n  initialOperationInfo: LROResponseInfo,\n  finalStateVia?: string\n): boolean {\n  const status: string = response.parsedBody?.status || \"Succeeded\";\n  if (!terminalStates.includes(status.toLowerCase())) {\n    return false;\n  }\n\n  if (initialOperationInfo.requestMethod === \"DELETE\") {\n    return true;\n  }\n\n  if (\n    initialOperationInfo.requestMethod === \"PUT\" &&\n    finalStateVia &&\n    finalStateVia.toLowerCase() === \"azure-asyncoperation\"\n  ) {\n    return true;\n  }\n\n  if (\n    initialOperationInfo.requestMethod !== \"PUT\" &&\n    !initialOperationInfo.location\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isLocationFinalResponse(response: HttpOperationResponse): boolean {\n  return response.status !== 202;\n}\n\nfunction isBodyPollingFinalResponse(response: HttpOperationResponse): boolean {\n  const provisioningState: string =\n    response.parsedBody?.properties?.provisioningState || \"Succeeded\";\n\n  if (terminalStates.includes(provisioningState.toLowerCase())) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function getLROData(result: HttpOperationResponse): LROResponseInfo {\n  const statusCode = result.status;\n  const { status, properties } = result.parsedBody || {};\n  return {\n    statusCode,\n    azureAsyncOperation: result.headers.get(\"azure-asyncoperation\"),\n    operationLocation: result.headers.get(\"operation-location\"),\n    location: result.headers.get(\"location\"),\n    requestMethod: result.request.method,\n    status,\n    provisioningState: properties?.provisioningState\n  };\n}\n","import {\n  OperationArguments,\n  OperationSpec,\n  RestResponse,\n  HttpMethods,\n  HttpOperationResponse\n} from \"@azure/core-http\";\nimport { PollOperationState, PollOperation } from \"@azure/core-lro\";\nexport const LROSYM = Symbol(\"LROData\");\n\nexport type FinalStateVia =\n  | \"azure-async-operation\"\n  | \"location\"\n  | \"original-uri\";\n\nexport interface LROResponseInfo {\n  requestMethod: HttpMethods;\n  statusCode: number;\n  isInitialRequest?: boolean;\n  azureAsyncOperation?: string;\n  operationLocation?: string;\n  location?: string;\n  provisioningState?: string;\n  status?: string;\n}\n\n/**\n * Extended operation response for LROs\n */\nexport type LROOperationResponse = HttpOperationResponse & {\n  /**\n   * Symbol that contains LRO details\n   */\n  [LROSYM]?: LROResponseInfo;\n};\n\nexport interface BaseResult extends RestResponse {\n  /**\n   * The underlying HTTP response containing both raw and deserialized response data.\n   */\n  _response: LROOperationResponse;\n}\n\nexport interface LROOperationStep<TResult extends BaseResult> {\n  args: OperationArguments;\n  spec: OperationSpec;\n  result: TResult;\n}\n\nexport interface LROOperationState<TResult extends BaseResult>\n  extends PollOperationState<TResult> {\n  lastOperation: LROOperationStep<TResult>;\n  initialOperation: LROOperationStep<TResult>;\n  pollingStrategy: LROStrategy<TResult>;\n  finalStateVia?: FinalStateVia;\n}\n\nexport interface LROStrategy<TResult extends BaseResult> {\n  isTerminal: () => boolean;\n  sendFinalRequest: () => Promise<LROOperationStep<TResult>>;\n  poll: () => Promise<LROOperationStep<TResult>>;\n}\n\nexport type LROOperation<TResult extends BaseResult> = PollOperation<\n  LROOperationState<TResult>,\n  TResult\n>;\n","import { LROStrategy, BaseResult, LROOperationStep, LROSYM } from \"./models\";\nimport { OperationSpec } from \"@azure/core-http\";\nimport { terminalStates } from \"./constants\";\nimport { SendOperationFn } from \"./lroPoller\";\n\n/**\n * Creates a polling strategy based on BodyPolling which uses the provisioning state\n * from the result to determine the current operation state\n */\nexport function createBodyPollingStrategy<TResult extends BaseResult>(\n  initialOperation: LROOperationStep<TResult>,\n  sendOperation: SendOperationFn<TResult>\n): LROStrategy<TResult> {\n  if (!initialOperation.result._response[LROSYM]) {\n    throw new Error(\"Expected lroData to be defined for BodyPolling strategy\");\n  }\n\n  let currentOperation = initialOperation;\n\n  return {\n    isTerminal: () => {\n      const currentResult = currentOperation.result._response[LROSYM];\n      if (!currentResult) {\n        throw new Error(\"Expected lroData to determine terminal status\");\n      }\n\n      const { provisioningState = \"succeeded\" } = currentResult;\n      // If provisioning state is missing, default to Success\n\n      return terminalStates.includes(provisioningState.toLowerCase());\n    },\n    sendFinalRequest: () => {\n      // BodyPolling doesn't require a final get so return the lastOperation\n      return Promise.resolve(currentOperation);\n    },\n    poll: async () => {\n      // When doing BodyPolling, we need to poll to the original url with a\n      // GET http method\n      const { requestBody, ...restSpec } = initialOperation.spec;\n      const pollingSpec: OperationSpec = {\n        // Make sure we don't send any body to the get request\n        ...restSpec,\n        httpMethod: \"GET\"\n      };\n\n      // Execute the polling operation\n      initialOperation.result = await sendOperation(\n        initialOperation.args,\n        pollingSpec\n      );\n      return initialOperation;\n    }\n  };\n}\n","import {\n  RequestPolicy,\n  RequestPolicyOptions,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  WebResource\n} from \"@azure/core-http\";\nimport { LROOperationResponse, LROSYM } from \"./models\";\nimport { getLROData } from \"./requestUtils\";\n\nexport function lroPolicy() {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new LROPolicy(nextPolicy, options);\n    }\n  };\n}\n\nclass LROPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  public async sendRequest(\n    webResource: WebResource\n  ): Promise<HttpOperationResponse> {\n    let result: LROOperationResponse = await this._nextPolicy.sendRequest(\n      webResource\n    );\n    const _lroData = getLROData(result);\n\n    result[LROSYM] = _lroData;\n\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * PollOperationState contains an opinionated list of the smallest set of properties needed\n * to define any long running operation poller.\n *\n * While the Poller class works as the local control mechanism to start triggering, wait for,\n * and potentially cancel a long running operation, the PollOperationState documents the status\n * of the remote long running operation.\n *\n * It should be updated at least when the operation starts, when it's finished, and when it's cancelled.\n * Though, implementations can have any other number of properties that can be updated by other reasons.\n */\nexport interface PollOperationState<TResult> {\n  /**\n   * True if the operation has started.\n   */\n  isStarted?: boolean;\n  /**\n   * True if the operation has been completed.\n   */\n  isCompleted?: boolean;\n  /**\n   * True if the operation has been cancelled.\n   */\n  isCancelled?: boolean;\n  /**\n   * Will exist if the operation encountered any error.\n   */\n  error?: Error;\n  /**\n   * Will exist if the operation concluded in a result of an expected type.\n   */\n  result?: TResult;\n}\n\n/**\n * PollOperation is an interface that defines how to update the local reference of the state of the remote\n * long running operation, just as well as how to request the cancellation of the same operation.\n *\n * It also has a method to serialize the operation so that it can be stored and resumed at any time.\n */\nexport interface PollOperation<TState, TResult> {\n  /**\n   * The state of the operation.\n   * It will be used to store the basic properties of PollOperationState<TResult>,\n   * plus any custom property that the implementation may require.\n   */\n  state: TState;\n\n  /**\n   * Defines how to request the remote service for updates on the status of the long running operation.\n   *\n   * It optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   * Also optionally receives a \"fireProgress\" function, which, if called, is responsible for triggering the\n   * poller's onProgress callbacks.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  update(options?: {\n    abortSignal?: AbortSignalLike;\n    fireProgress?: (state: TState) => void;\n  }): Promise<PollOperation<TState, TResult>>;\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * It returns a promise that should be resolved with an updated version of the poller's operation.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  cancel(options?: { abortSignal?: AbortSignalLike }): Promise<PollOperation<TState, TResult>>;\n\n  /**\n   * Serializes the operation.\n   * Useful when wanting to create a poller that monitors an existing operation.\n   */\n  toString(): string;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * CancelOnProgress is used as the return value of a Poller's onProgress method.\n * When a user invokes onProgress, they're required to pass in a function that will be\n * called as a callback with the new data received each time the poll operation is updated.\n * onProgress returns a function that will prevent any further update to reach the original callback.\n */\nexport type CancelOnProgress = () => void;\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When a poller is cancelled through the `cancelOperation` method,\n * the poller will be rejected with an instance of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\n// eslint-disable-next-line no-use-before-define\nexport interface PollerLike<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult> {\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      }\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-http has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-http\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * @internal\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll();\n      await this.delay();\n    }\n  }\n\n  /**\n   * @internal\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    try {\n      if (!this.isDone()) {\n        this.operation = await this.operation.update({\n          abortSignal: options.abortSignal,\n          fireProgress: this.fireProgress.bind(this)\n        });\n        if (this.isDone() && this.resolve) {\n          // If the poller has finished polling, this means we now have a result.\n          // However, it can be the case that TResult is instantiated to void, so\n          // we are not expecting a result anyway. To assert that we might not\n          // have a result eventually after finishing polling, we cast the result\n          // to TResult.\n          this.resolve(this.operation.state.result as TResult);\n        }\n      }\n    } catch (e) {\n      this.operation.state.error = e;\n      if (this.reject) {\n        this.reject(e);\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * @internal\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * @internal\n   * Invokes the underlying operation's cancel method, and rejects the\n   * pollUntilDone promise.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n    if (this.reject) {\n      this.reject(new PollerCancelledError(\"Poller cancelled\"));\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling().catch(this.reject);\n    }\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.stopped) {\n      this.stopped = true;\n    }\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport * from \"./pollOperation\";\nexport * from \"./poller\";\n","import { BaseResult, LROOperationState, LROOperation, LROSYM } from \"./models\";\n\n/**\n * Creates a copy of the operation from a given State\n */\nexport function makeOperation<TResult extends BaseResult>(\n  state: LROOperationState<TResult>\n): LROOperation<TResult> {\n  return {\n    state: { ...state },\n    update,\n    cancel,\n    toString: function(this: LROOperation<TResult>) {\n      return JSON.stringify(this.state);\n    }\n  };\n}\n\n/**\n * General update function for LROPoller, the general process is as follows\n * 1. Check initial operation result to determine the strategy to use\n *  - Strategies: Location, Azure-AsyncOperation, Original Uri\n * 2. Check if the operation result has a terminal state\n *  - Terminal state will be determined by each strategy\n *  2.1 If it is terminal state Check if a final GET request is required, if so\n *      send final GET request and return result from operation. If no final GET\n *      is required, just return the result from operation.\n *      - Determining what to call for final request is responsibility of each strategy\n *  2.2 If it is not terminal state, call the polling operation call it and go to step 1\n *      - Determining what to call for polling is responsibility of each strategy\n *      - Strategies will always use the latest URI for polling if provided otherwise\n *        the last known one\n */\nasync function update<TResult extends BaseResult>(\n  this: LROOperation<TResult>\n): Promise<LROOperation<TResult>> {\n  const state = this.state;\n\n  const { sendFinalRequest, poll, isTerminal } = state.pollingStrategy;\n  const currentResponse = state.lastOperation;\n  const currentLroData = currentResponse.result._response[LROSYM];\n\n  if (!currentLroData) {\n    throw new Error(\n      \"Expected lroData to be defined for updating LRO operation\"\n    );\n  }\n\n  // Check if last result is terminal\n  if (isTerminal()) {\n    state.lastOperation = await sendFinalRequest();\n    state.result = state.lastOperation.result;\n    state.isCompleted = true;\n  } else {\n    state.lastOperation = await poll();\n  }\n\n  // Return operation\n  return makeOperation(state);\n}\n\n/**\n * Swagger doesn't support defining a cancel operation, we'll just mark\n * the operation state as cancelled\n */\nasync function cancel<TResult extends BaseResult>(\n  this: LROOperation<TResult>\n): Promise<LROOperation<TResult>> {\n  return makeOperation({ ...this.state, isCancelled: true });\n}\n","import {\n  LROStrategy,\n  BaseResult,\n  LROOperationStep,\n  LROResponseInfo,\n  FinalStateVia,\n  LROSYM\n} from \"./models\";\nimport {\n  OperationSpec,\n  OperationArguments,\n  OperationResponse\n} from \"@azure/core-http\";\nimport { terminalStates } from \"./constants\";\nimport { SendOperationFn } from \".\";\n\nexport function createAzureAsyncOperationStrategy<TResult extends BaseResult>(\n  initialOperation: LROOperationStep<TResult>,\n  sendOperationFn: SendOperationFn<TResult>,\n  finalStateVia?: FinalStateVia\n): LROStrategy<TResult> {\n  const lroData = initialOperation.result._response[LROSYM];\n  if (!lroData) {\n    throw new Error(\n      \"Expected lroData to be defined for Azure-AsyncOperation strategy\"\n    );\n  }\n\n  let currentOperation = initialOperation;\n  let lastKnownPollingUrl =\n    lroData.azureAsyncOperation || lroData.operationLocation;\n\n  return {\n    isTerminal: () => {\n      const currentResult = currentOperation.result._response[LROSYM];\n\n      if (!currentResult) {\n        throw new Error(\"Expected lroData to determine terminal status\");\n      }\n\n      if (currentOperation === initialOperation) {\n        // Azure-AsyncOperations don't need to check for terminal state\n        // on originalOperation result, always need to poll\n        return false;\n      }\n\n      const { status = \"succeeded\" } = currentResult;\n      return terminalStates.includes(status.toLowerCase());\n    },\n    sendFinalRequest: async () => {\n      if (!initialOperation.result._response[LROSYM]) {\n        throw new Error(\"Expected lroData to determine terminal status\");\n      }\n\n      if (!currentOperation.result._response[LROSYM]) {\n        throw new Error(\"Expected lroData to determine terminal status\");\n      }\n\n      const initialOperationResult = initialOperation.result._response[LROSYM];\n      const currentOperationResult = currentOperation.result._response[LROSYM];\n\n      if (\n        !shouldPerformFinalGet(initialOperationResult, currentOperationResult)\n      ) {\n        return currentOperation;\n      }\n\n      if (initialOperationResult?.requestMethod === \"PUT\") {\n        currentOperation = await sendFinalGet(\n          initialOperation,\n          sendOperationFn\n        );\n\n        return currentOperation;\n      }\n\n      if (initialOperationResult?.location) {\n        switch (finalStateVia) {\n          case \"original-uri\":\n            currentOperation = await sendFinalGet(\n              initialOperation,\n              sendOperationFn\n            );\n            return currentOperation;\n\n          case \"azure-async-operation\":\n            return currentOperation;\n          case \"location\":\n          default:\n            const location =\n              initialOperationResult.location ||\n              currentOperationResult?.location;\n\n            if (!location) {\n              throw new Error(\"Couldn't determine final GET URL from location\");\n            }\n\n            return await sendFinalGet(\n              initialOperation,\n              sendOperationFn,\n              location\n            );\n        }\n      }\n\n      // All other cases return the last operation\n      return currentOperation;\n    },\n    poll: async () => {\n      if (!lastKnownPollingUrl) {\n        throw new Error(\"Unable to determine polling url\");\n      }\n\n      const pollingArgs = currentOperation.args;\n      // Make sure we don't send any body to the get request\n      const { requestBody, responses, ...restSpec } = currentOperation.spec;\n\n      const pollingSpec: OperationSpec = {\n        ...restSpec,\n        responses: getCompositeMappers(responses),\n        httpMethod: \"GET\",\n        path: lastKnownPollingUrl\n      };\n\n      const result = await sendOperationFn(pollingArgs, pollingSpec);\n\n      // Update latest polling url\n      lastKnownPollingUrl =\n        result._response[LROSYM]?.azureAsyncOperation ||\n        result._response[LROSYM]?.operationLocation ||\n        lastKnownPollingUrl;\n\n      // Update lastOperation result\n      currentOperation = {\n        args: pollingArgs,\n        spec: pollingSpec,\n        result\n      };\n\n      return currentOperation;\n    }\n  };\n}\n\n/**\n * Polling calls will always return a status object i.e. {\"status\": \"success\"}\n * these intermediate responses are not described in the swagger so we need to\n * pass custom mappers at runtime.\n * This function replaces all the existing mappers to be able to deserialize a status object\n * @param responses Original set of responses defined in the operation\n */\nfunction getCompositeMappers(responses: {\n  [responseCode: string]: OperationResponse;\n}): {\n  [responseCode: string]: OperationResponse;\n} {\n  return Object.keys(responses).reduce((acc, statusCode) => {\n    return {\n      ...acc,\n      [statusCode]: {\n        ...responses[statusCode],\n        bodyMapper: {\n          type: {\n            name: \"Composite\",\n            modelProperties: {\n              status: {\n                serializedName: \"status\",\n                type: {\n                  name: \"String\"\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }, {} as { [responseCode: string]: OperationResponse });\n}\n\nfunction shouldPerformFinalGet(\n  initialResult?: LROResponseInfo,\n  currentResult?: LROResponseInfo\n) {\n  const { status } = currentResult || {};\n  const { requestMethod: initialRequestMethod, location } = initialResult || {};\n  if (status && status.toLowerCase() !== \"succeeded\") {\n    return false;\n  }\n\n  if (initialRequestMethod === \"DELETE\") {\n    return false;\n  }\n\n  if (initialRequestMethod !== \"PUT\" && !location) {\n    return false;\n  }\n\n  return true;\n}\n\nasync function sendFinalGet<TResult extends BaseResult>(\n  initialOperation: LROOperationStep<TResult>,\n  sendOperationFn: SendOperationFn<TResult>,\n  path?: string\n): Promise<LROOperationStep<TResult>> {\n  // Make sure we don't send any body to the get request\n  const { requestBody, ...restSpec } = initialOperation.spec;\n  const finalGetSpec: OperationSpec = {\n    ...restSpec,\n    httpMethod: \"GET\"\n  };\n\n  // Send final GET request to the Original URL\n  const spec = {\n    ...finalGetSpec,\n    ...(path && { path })\n  };\n\n  let operationArgs: OperationArguments = initialOperation.args;\n  if (operationArgs.options) {\n    operationArgs.options.shouldDeserialize = true;\n  }\n\n  const finalResult = await sendOperationFn(initialOperation.args, spec);\n\n  return {\n    args: initialOperation.args,\n    spec,\n    result: finalResult\n  };\n}\n","import { BaseResult, LROOperationStep, LROStrategy, LROSYM } from \"./models\";\nimport { SendOperationFn } from \"./lroPoller\";\nimport { OperationSpec } from \"@azure/core-http\";\n\nexport function createLocationStrategy<TResult extends BaseResult>(\n  initialOperation: LROOperationStep<TResult>,\n  sendOperationFn: SendOperationFn<TResult>\n): LROStrategy<TResult> {\n  const lroData = initialOperation.result._response[LROSYM];\n  if (!lroData) {\n    throw new Error(\n      \"Expected lroData to be defined for Azure-AsyncOperation strategy\"\n    );\n  }\n\n  let currentOperation = initialOperation;\n  let lastKnownPollingUrl = lroData.location;\n\n  return {\n    isTerminal: () => {\n      const currentResult = currentOperation.result._response[LROSYM];\n      if (!currentResult) {\n        throw new Error(\"Expected lroData to determine terminal status\");\n      }\n\n      if (currentOperation === initialOperation) {\n        return false;\n      }\n\n      if (currentResult.statusCode === 202) {\n        return false;\n      }\n\n      return true;\n    },\n    sendFinalRequest: () => Promise.resolve(currentOperation),\n    poll: async () => {\n      if (!lastKnownPollingUrl) {\n        throw new Error(\"Unable to determine polling url\");\n      }\n\n      const pollingArgs = currentOperation.args;\n      // Make sure we don't send any body to the get request\n      const { requestBody, ...restSpec } = currentOperation.spec;\n      const pollingSpec: OperationSpec = {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path: lastKnownPollingUrl\n      };\n\n      const result = await sendOperationFn(pollingArgs, pollingSpec);\n\n      // Update latest polling url\n      lastKnownPollingUrl =\n        result._response[LROSYM]?.location || lastKnownPollingUrl;\n\n      // Update lastOperation result\n      currentOperation = {\n        args: pollingArgs,\n        spec: pollingSpec,\n        result\n      };\n\n      return currentOperation;\n    }\n  };\n}\n","import { LROStrategy, BaseResult, LROOperationStep } from \"./models\";\n\n/**\n * Creates a polling strategy based on BodyPolling which uses the provisioning state\n * from the result to determine the current operation state\n */\nexport function createPassthroughStrategy<TResult extends BaseResult>(\n  initialOperation: LROOperationStep<TResult>\n): LROStrategy<TResult> {\n  return {\n    isTerminal: () => {\n      return true;\n    },\n    sendFinalRequest: () => {\n      // BodyPolling doesn't require a final get so return the lastOperation\n      return Promise.resolve(initialOperation);\n    },\n    poll: async () => {\n      throw new Error(\"Passthrough strategy should never poll\");\n    }\n  };\n}\n","import { Poller } from \"@azure/core-lro\";\nimport {\n  OperationSpec,\n  OperationArguments,\n  delay,\n  RestError\n} from \"@azure/core-http\";\nimport {\n  BaseResult,\n  LROOperationState,\n  LROOperationStep,\n  FinalStateVia,\n  LROSYM\n} from \"./models\";\nimport { makeOperation } from \"./operation\";\nimport { createBodyPollingStrategy } from \"./bodyPollingStrategy\";\nimport { createAzureAsyncOperationStrategy } from \"./azureAsyncOperationStrategy\";\nimport { createLocationStrategy } from \"./locationStrategy\";\nimport { createPassthroughStrategy } from \"./passthroughStrategy\";\n\nexport type SendOperationFn<TResult extends BaseResult> = (\n  args: OperationArguments,\n  spec: OperationSpec\n) => Promise<TResult>;\n\nexport interface LROPollerOptions<TResult extends BaseResult> {\n  /**\n   * Defines how much time the poller is going to wait before making a new request to the service.\n   */\n  intervalInMs?: number;\n  /**\n   * Arguments used to send the initial operation\n   */\n  initialOperationArguments: OperationArguments;\n  /**\n   * Operation spec provided for the initial operation\n   */\n  initialOperationSpec: OperationSpec;\n  /**\n   * Result from the initial operation\n   */\n  initialOperationResult: TResult;\n  /**\n   * Function to execute an operation based on an operation spec and arguments\n   */\n  sendOperation: SendOperationFn<TResult>;\n  /**\n   * Optional information on where to poll. When not defined it defaults to \"Location\"\n   */\n  finalStateVia?: FinalStateVia;\n}\n\nexport class LROPoller<TResult extends BaseResult> extends Poller<\n  LROOperationState<TResult>,\n  TResult\n> {\n  private intervalInMs: number;\n\n  constructor({\n    initialOperationArguments,\n    initialOperationResult,\n    initialOperationSpec,\n    sendOperation,\n    finalStateVia,\n    intervalInMs = 2000\n  }: LROPollerOptions<TResult>) {\n    const initialOperation = {\n      args: initialOperationArguments,\n      spec: initialOperationSpec,\n      result: initialOperationResult\n    };\n\n    const pollingStrategy = getPollingStrategy(\n      initialOperation,\n      sendOperation,\n      finalStateVia\n    );\n\n    const state: LROOperationState<TResult> = {\n      // Initial operation will become the last operation\n      initialOperation,\n      lastOperation: initialOperation,\n      pollingStrategy,\n      finalStateVia\n    };\n\n    const operation = makeOperation(state);\n    super(operation);\n\n    this.intervalInMs = intervalInMs;\n  }\n\n  /**\n   * The method used by the poller to wait before attempting to update its operation.\n   */\n  delay(): Promise<void> {\n    return delay(this.intervalInMs);\n  }\n}\n\n/**\n * This function determines which strategy to use based on the response from\n * the last operation executed, this last operation can be an initial operation\n * or a polling operation. The 3 possible strategies are described below:\n *\n * A) Azure-AsyncOperation or Operation-Location\n * B) Location\n * C) BodyPolling (provisioningState)\n *  - This strategy is used when:\n *    - Response doesn't contain any of the following headers Location, Azure-AsyncOperation or Operation-Location\n *    - Last operation method is PUT\n */\nfunction getPollingStrategy<TResult extends BaseResult>(\n  initialOperation: LROOperationStep<TResult>,\n  sendOperationFn: SendOperationFn<TResult>,\n  finalStateVia?: FinalStateVia\n) {\n  const lroData = initialOperation.result._response[LROSYM];\n\n  if (!lroData) {\n    const error = new RestError(\n      \"Service response doesn't include the required LRO data to continue polling\"\n    );\n    error.statusCode = initialOperation.result._response.status;\n    error.response = initialOperation.result._response;\n    throw error;\n  }\n\n  if (lroData.azureAsyncOperation || lroData.operationLocation) {\n    return createAzureAsyncOperationStrategy(\n      initialOperation,\n      sendOperationFn,\n      finalStateVia\n    );\n  }\n\n  if (lroData.location) {\n    return createLocationStrategy(initialOperation, sendOperationFn);\n  }\n\n  if ([\"PUT\", \"PATCH\"].includes(lroData.requestMethod || \"\")) {\n    return createBodyPollingStrategy(initialOperation, sendOperationFn);\n  }\n\n  // Default strategy is just a passthrough returning the initial operation\n  return createPassthroughStrategy(initialOperation);\n}\n","import \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { IotHubResource } from \"../operationsInterfaces\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\nimport { LROPoller, shouldDeserializeLRO, LROOperationState } from \"../lro\";\nimport { PollerLike } from \"@azure/core-lro\";\nimport {\n  IotHubDescription,\n  IotHubSkuDescription,\n  EventHubConsumerGroupInfo,\n  JobResponse,\n  IotHubQuotaMetricInfo,\n  EndpointHealthData,\n  SharedAccessSignatureAuthorizationRule,\n  IotHubResourceGetResponse,\n  IotHubResourceCreateOrUpdateOptionalParams,\n  IotHubResourceCreateOrUpdateResponse,\n  TagsResource,\n  IotHubResourceUpdateResponse,\n  IotHubResourceDeleteResponse,\n  IotHubResourceListBySubscriptionResponse,\n  IotHubResourceListByResourceGroupResponse,\n  IotHubResourceGetStatsResponse,\n  IotHubResourceGetValidSkusResponse,\n  IotHubResourceListEventHubConsumerGroupsResponse,\n  IotHubResourceGetEventHubConsumerGroupResponse,\n  EventHubConsumerGroupBodyDescription,\n  IotHubResourceCreateEventHubConsumerGroupResponse,\n  IotHubResourceListJobsResponse,\n  IotHubResourceGetJobResponse,\n  IotHubResourceGetQuotaMetricsResponse,\n  IotHubResourceGetEndpointHealthResponse,\n  OperationInputs,\n  IotHubResourceCheckNameAvailabilityResponse,\n  TestAllRoutesInput,\n  IotHubResourceTestAllRoutesResponse,\n  TestRouteInput,\n  IotHubResourceTestRouteResponse,\n  IotHubResourceListKeysResponse,\n  IotHubResourceGetKeysForKeyNameResponse,\n  ExportDevicesRequest,\n  IotHubResourceExportDevicesResponse,\n  ImportDevicesRequest,\n  IotHubResourceImportDevicesResponse,\n  IotHubResourceListBySubscriptionNextResponse,\n  IotHubResourceListByResourceGroupNextResponse,\n  IotHubResourceGetValidSkusNextResponse,\n  IotHubResourceListEventHubConsumerGroupsNextResponse,\n  IotHubResourceListJobsNextResponse,\n  IotHubResourceGetQuotaMetricsNextResponse,\n  IotHubResourceGetEndpointHealthNextResponse,\n  IotHubResourceListKeysNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class representing a IotHubResource. */\nexport class IotHubResourceImpl implements IotHubResource {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Initialize a new instance of the class IotHubResource class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the IoT hubs in a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<IotHubDescription> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubDescription[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubDescription> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the IoT hubs in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<IotHubDescription> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubDescription[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubDescription> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the list of valid SKUs for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listValidSkus(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<IotHubSkuDescription> {\n    const iter = this.getValidSkusPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getValidSkusPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *getValidSkusPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubSkuDescription[]> {\n    let result = await this._getValidSkus(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getValidSkusNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getValidSkusPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubSkuDescription> {\n    for await (const page of this.getValidSkusPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT\n   * hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param options The options parameters.\n   */\n  public listEventHubConsumerGroups(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<EventHubConsumerGroupInfo> {\n    const iter = this.listEventHubConsumerGroupsPagingAll(\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listEventHubConsumerGroupsPagingPage(\n          resourceGroupName,\n          resourceName,\n          eventHubEndpointName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listEventHubConsumerGroupsPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<EventHubConsumerGroupInfo[]> {\n    let result = await this._listEventHubConsumerGroups(\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listEventHubConsumerGroupsNext(\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listEventHubConsumerGroupsPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<EventHubConsumerGroupInfo> {\n    for await (const page of this.listEventHubConsumerGroupsPagingPage(\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listJobs(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<JobResponse> {\n    const iter = this.listJobsPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listJobsPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listJobsPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<JobResponse[]> {\n    let result = await this._listJobs(resourceGroupName, resourceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listJobsNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listJobsPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<JobResponse> {\n    for await (const page of this.listJobsPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the quota metrics for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listQuotaMetrics(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<IotHubQuotaMetricInfo> {\n    const iter = this.getQuotaMetricsPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getQuotaMetricsPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *getQuotaMetricsPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubQuotaMetricInfo[]> {\n    let result = await this._getQuotaMetrics(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getQuotaMetricsNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getQuotaMetricsPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<IotHubQuotaMetricInfo> {\n    for await (const page of this.getQuotaMetricsPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the health for routing endpoints.\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param options The options parameters.\n   */\n  public listEndpointHealth(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<EndpointHealthData> {\n    const iter = this.getEndpointHealthPagingAll(\n      resourceGroupName,\n      iotHubName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getEndpointHealthPagingPage(\n          resourceGroupName,\n          iotHubName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *getEndpointHealthPagingPage(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<EndpointHealthData[]> {\n    let result = await this._getEndpointHealth(\n      resourceGroupName,\n      iotHubName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getEndpointHealthNext(\n        resourceGroupName,\n        iotHubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getEndpointHealthPagingAll(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<EndpointHealthData> {\n    for await (const page of this.getEndpointHealthPagingPage(\n      resourceGroupName,\n      iotHubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listKeys(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): PagedAsyncIterableIterator<SharedAccessSignatureAuthorizationRule> {\n    const iter = this.listKeysPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listKeysPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listKeysPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<SharedAccessSignatureAuthorizationRule[]> {\n    let result = await this._listKeys(resourceGroupName, resourceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listKeysNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listKeysPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): AsyncIterableIterator<SharedAccessSignatureAuthorizationRule> {\n    for await (const page of this.listKeysPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the non-security related metadata of an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getOperationSpec\n    ) as Promise<IotHubResourceGetResponse>;\n  }\n\n  /**\n   * Create or update the metadata of an Iot hub. The usual pattern to modify a property is to retrieve\n   * the IoT hub metadata and security metadata, and then combine them with the modified values in a new\n   * body to update the IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param iotHubDescription The IoT hub metadata and security metadata.\n   * @param options The options parameters.\n   */\n  async createOrUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    iotHubDescription: IotHubDescription,\n    options?: IotHubResourceCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      LROOperationState<IotHubResourceCreateOrUpdateResponse>,\n      IotHubResourceCreateOrUpdateResponse\n    >\n  > {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      iotHubDescription,\n      options: this.getOperationOptions(options, \"undefined\")\n    };\n    const sendOperation = (\n      args: coreHttp.OperationArguments,\n      spec: coreHttp.OperationSpec\n    ) => {\n      return this.client.sendOperationRequest(args, spec) as Promise<\n        IotHubResourceCreateOrUpdateResponse\n      >;\n    };\n\n    const initialOperationResult = await sendOperation(\n      operationArguments,\n      createOrUpdateOperationSpec\n    );\n    return new LROPoller({\n      initialOperationArguments: operationArguments,\n      initialOperationSpec: createOrUpdateOperationSpec,\n      initialOperationResult,\n      sendOperation\n    });\n  }\n\n  /**\n   * Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method\n   * @param resourceGroupName Resource group identifier.\n   * @param resourceName Name of iot hub to update.\n   * @param iotHubTags Updated tag information to set into the iot hub instance.\n   * @param options The options parameters.\n   */\n  async update(\n    resourceGroupName: string,\n    resourceName: string,\n    iotHubTags: TagsResource,\n    options?: coreHttp.OperationOptions\n  ): Promise<\n    PollerLike<\n      LROOperationState<IotHubResourceUpdateResponse>,\n      IotHubResourceUpdateResponse\n    >\n  > {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      iotHubTags,\n      options: this.getOperationOptions(options, \"undefined\")\n    };\n    const sendOperation = (\n      args: coreHttp.OperationArguments,\n      spec: coreHttp.OperationSpec\n    ) => {\n      return this.client.sendOperationRequest(args, spec) as Promise<\n        IotHubResourceUpdateResponse\n      >;\n    };\n\n    const initialOperationResult = await sendOperation(\n      operationArguments,\n      updateOperationSpec\n    );\n    return new LROPoller({\n      initialOperationArguments: operationArguments,\n      initialOperationSpec: updateOperationSpec,\n      initialOperationResult,\n      sendOperation\n    });\n  }\n\n  /**\n   * Delete an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  async delete(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<\n    PollerLike<\n      LROOperationState<IotHubResourceDeleteResponse>,\n      IotHubResourceDeleteResponse\n    >\n  > {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: this.getOperationOptions(options, \"undefined\")\n    };\n    const sendOperation = (\n      args: coreHttp.OperationArguments,\n      spec: coreHttp.OperationSpec\n    ) => {\n      return this.client.sendOperationRequest(args, spec) as Promise<\n        IotHubResourceDeleteResponse\n      >;\n    };\n\n    const initialOperationResult = await sendOperation(\n      operationArguments,\n      deleteOperationSpec\n    );\n    return new LROPoller({\n      initialOperationArguments: operationArguments,\n      initialOperationSpec: deleteOperationSpec,\n      initialOperationResult,\n      sendOperation\n    });\n  }\n\n  /**\n   * Get all the IoT hubs in a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListBySubscriptionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listBySubscriptionOperationSpec\n    ) as Promise<IotHubResourceListBySubscriptionResponse>;\n  }\n\n  /**\n   * Get all the IoT hubs in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListByResourceGroupResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listByResourceGroupOperationSpec\n    ) as Promise<IotHubResourceListByResourceGroupResponse>;\n  }\n\n  /**\n   * Get the statistics from an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  getStats(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetStatsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getStatsOperationSpec\n    ) as Promise<IotHubResourceGetStatsResponse>;\n  }\n\n  /**\n   * Get the list of valid SKUs for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _getValidSkus(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetValidSkusResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getValidSkusOperationSpec\n    ) as Promise<IotHubResourceGetValidSkusResponse>;\n  }\n\n  /**\n   * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT\n   * hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param options The options parameters.\n   */\n  private _listEventHubConsumerGroups(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListEventHubConsumerGroupsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listEventHubConsumerGroupsOperationSpec\n    ) as Promise<IotHubResourceListEventHubConsumerGroupsResponse>;\n  }\n\n  /**\n   * Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to retrieve.\n   * @param options The options parameters.\n   */\n  getEventHubConsumerGroup(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    name: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetEventHubConsumerGroupResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      name,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getEventHubConsumerGroupOperationSpec\n    ) as Promise<IotHubResourceGetEventHubConsumerGroupResponse>;\n  }\n\n  /**\n   * Add a consumer group to an Event Hub-compatible endpoint in an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to add.\n   * @param consumerGroupBody The consumer group to add.\n   * @param options The options parameters.\n   */\n  createEventHubConsumerGroup(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    name: string,\n    consumerGroupBody: EventHubConsumerGroupBodyDescription,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceCreateEventHubConsumerGroupResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      name,\n      consumerGroupBody,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createEventHubConsumerGroupOperationSpec\n    ) as Promise<IotHubResourceCreateEventHubConsumerGroupResponse>;\n  }\n\n  /**\n   * Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to delete.\n   * @param options The options parameters.\n   */\n  deleteEventHubConsumerGroup(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    name: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      name,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteEventHubConsumerGroupOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _listJobs(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListJobsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listJobsOperationSpec\n    ) as Promise<IotHubResourceListJobsResponse>;\n  }\n\n  /**\n   * Get the details of a job from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param jobId The job identifier.\n   * @param options The options parameters.\n   */\n  getJob(\n    resourceGroupName: string,\n    resourceName: string,\n    jobId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetJobResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      jobId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getJobOperationSpec\n    ) as Promise<IotHubResourceGetJobResponse>;\n  }\n\n  /**\n   * Get the quota metrics for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _getQuotaMetrics(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetQuotaMetricsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getQuotaMetricsOperationSpec\n    ) as Promise<IotHubResourceGetQuotaMetricsResponse>;\n  }\n\n  /**\n   * Get the health for routing endpoints.\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param options The options parameters.\n   */\n  private _getEndpointHealth(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetEndpointHealthResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      iotHubName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getEndpointHealthOperationSpec\n    ) as Promise<IotHubResourceGetEndpointHealthResponse>;\n  }\n\n  /**\n   * Check if an IoT hub name is available.\n   * @param operationInputs Set the name parameter in the OperationInputs structure to the name of the\n   *                        IoT hub to check.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    operationInputs: OperationInputs,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceCheckNameAvailabilityResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      operationInputs,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      checkNameAvailabilityOperationSpec\n    ) as Promise<IotHubResourceCheckNameAvailabilityResponse>;\n  }\n\n  /**\n   * Test all routes configured in this Iot Hub\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param input Input for testing all routes\n   * @param options The options parameters.\n   */\n  testAllRoutes(\n    iotHubName: string,\n    resourceGroupName: string,\n    input: TestAllRoutesInput,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceTestAllRoutesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      iotHubName,\n      resourceGroupName,\n      input,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      testAllRoutesOperationSpec\n    ) as Promise<IotHubResourceTestAllRoutesResponse>;\n  }\n\n  /**\n   * Test the new route for this Iot Hub\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param input Route that needs to be tested\n   * @param options The options parameters.\n   */\n  testRoute(\n    iotHubName: string,\n    resourceGroupName: string,\n    input: TestRouteInput,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceTestRouteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      iotHubName,\n      resourceGroupName,\n      input,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      testRouteOperationSpec\n    ) as Promise<IotHubResourceTestRouteResponse>;\n  }\n\n  /**\n   * Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _listKeys(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListKeysResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listKeysOperationSpec\n    ) as Promise<IotHubResourceListKeysResponse>;\n  }\n\n  /**\n   * Get a shared access policy by name from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param keyName The name of the shared access policy.\n   * @param options The options parameters.\n   */\n  getKeysForKeyName(\n    resourceGroupName: string,\n    resourceName: string,\n    keyName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetKeysForKeyNameResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      keyName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getKeysForKeyNameOperationSpec\n    ) as Promise<IotHubResourceGetKeysForKeyNameResponse>;\n  }\n\n  /**\n   * Exports all the device identities in the IoT hub identity registry to an Azure Storage blob\n   * container. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param exportDevicesParameters The parameters that specify the export devices operation.\n   * @param options The options parameters.\n   */\n  exportDevices(\n    resourceGroupName: string,\n    resourceName: string,\n    exportDevicesParameters: ExportDevicesRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceExportDevicesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      exportDevicesParameters,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      exportDevicesOperationSpec\n    ) as Promise<IotHubResourceExportDevicesResponse>;\n  }\n\n  /**\n   * Import, update, or delete device identities in the IoT hub identity registry from a blob. For more\n   * information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param importDevicesParameters The parameters that specify the import devices operation.\n   * @param options The options parameters.\n   */\n  importDevices(\n    resourceGroupName: string,\n    resourceName: string,\n    importDevicesParameters: ImportDevicesRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceImportDevicesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      importDevicesParameters,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      importDevicesOperationSpec\n    ) as Promise<IotHubResourceImportDevicesResponse>;\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListBySubscriptionNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listBySubscriptionNextOperationSpec\n    ) as Promise<IotHubResourceListBySubscriptionNextResponse>;\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListByResourceGroupNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listByResourceGroupNextOperationSpec\n    ) as Promise<IotHubResourceListByResourceGroupNextResponse>;\n  }\n\n  /**\n   * GetValidSkusNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the GetValidSkus method.\n   * @param options The options parameters.\n   */\n  private _getValidSkusNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetValidSkusNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getValidSkusNextOperationSpec\n    ) as Promise<IotHubResourceGetValidSkusNextResponse>;\n  }\n\n  /**\n   * ListEventHubConsumerGroupsNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param nextLink The nextLink from the previous successful call to the ListEventHubConsumerGroups\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listEventHubConsumerGroupsNext(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListEventHubConsumerGroupsNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listEventHubConsumerGroupsNextOperationSpec\n    ) as Promise<IotHubResourceListEventHubConsumerGroupsNextResponse>;\n  }\n\n  /**\n   * ListJobsNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the ListJobs method.\n   * @param options The options parameters.\n   */\n  private _listJobsNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListJobsNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listJobsNextOperationSpec\n    ) as Promise<IotHubResourceListJobsNextResponse>;\n  }\n\n  /**\n   * GetQuotaMetricsNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the GetQuotaMetrics method.\n   * @param options The options parameters.\n   */\n  private _getQuotaMetricsNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetQuotaMetricsNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getQuotaMetricsNextOperationSpec\n    ) as Promise<IotHubResourceGetQuotaMetricsNextResponse>;\n  }\n\n  /**\n   * GetEndpointHealthNext\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param nextLink The nextLink from the previous successful call to the GetEndpointHealth method.\n   * @param options The options parameters.\n   */\n  private _getEndpointHealthNext(\n    resourceGroupName: string,\n    iotHubName: string,\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceGetEndpointHealthNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      iotHubName,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getEndpointHealthNextOperationSpec\n    ) as Promise<IotHubResourceGetEndpointHealthNextResponse>;\n  }\n\n  /**\n   * ListKeysNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the ListKeys method.\n   * @param options The options parameters.\n   */\n  private _listKeysNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<IotHubResourceListKeysNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listKeysNextOperationSpec\n    ) as Promise<IotHubResourceListKeysNextResponse>;\n  }\n\n  private getOperationOptions<TOptions extends coreHttp.OperationOptions>(\n    options: TOptions | undefined,\n    finalStateVia?: string\n  ): coreHttp.RequestOptionsBase {\n    const operationOptions: coreHttp.OperationOptions = options || {};\n    operationOptions.requestOptions = {\n      ...operationOptions.requestOptions,\n      shouldDeserialize: shouldDeserializeLRO(finalStateVia)\n    };\n    return coreHttp.operationOptionsToRequestOptionsBase(operationOptions);\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    201: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    202: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    204: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.iotHubDescription,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    201: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    202: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    204: {\n      bodyMapper: Mappers.IotHubDescription\n    }\n  },\n  requestBody: Parameters.iotHubTags,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    201: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    202: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    204: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatsOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegistryStatistics\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getValidSkusOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubSkuDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listEventHubConsumerGroupsOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEventHubConsumerGroupOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createEventHubConsumerGroupOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.consumerGroupBody,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteEventHubConsumerGroupOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listJobsOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getJobOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.jobId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getQuotaMetricsOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubQuotaMetricInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEndpointHealthOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointHealthDataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubNameAvailabilityInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.operationInputs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst testAllRoutesOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestAllRoutesResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst testRouteOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testnew\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestRouteResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.input1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listKeysOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeysForKeyNameOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRule\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst exportDevicesOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.exportDevicesParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst importDevicesOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.importDevicesParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getValidSkusNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubSkuDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listEventHubConsumerGroupsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listJobsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getQuotaMetricsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubQuotaMetricInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEndpointHealthNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointHealthDataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","import { ResourceProviderCommon } from \"../operationsInterfaces\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\nimport { ResourceProviderCommonGetSubscriptionQuotaResponse } from \"../models\";\n\n/** Class representing a ResourceProviderCommon. */\nexport class ResourceProviderCommonImpl implements ResourceProviderCommon {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Initialize a new instance of the class ResourceProviderCommon class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get the number of free and paid iot hubs in the subscription\n   * @param options The options parameters.\n   */\n  getSubscriptionQuota(\n    options?: coreHttp.OperationOptions\n  ): Promise<ResourceProviderCommonGetSubscriptionQuotaResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getSubscriptionQuotaOperationSpec\n    ) as Promise<ResourceProviderCommonGetSubscriptionQuotaResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst getSubscriptionQuotaOperationSpec: coreHttp.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserSubscriptionQuotaListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","import { Certificates } from \"../operationsInterfaces\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\nimport {\n  CertificatesListByIotHubResponse,\n  CertificatesGetResponse,\n  CertificateDescription,\n  CertificatesCreateOrUpdateOptionalParams,\n  CertificatesCreateOrUpdateResponse,\n  CertificatesGenerateVerificationCodeResponse,\n  CertificateVerificationDescription,\n  CertificatesVerifyResponse\n} from \"../models\";\n\n/** Class representing a Certificates. */\nexport class CertificatesImpl implements Certificates {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Initialize a new instance of the class Certificates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of certificates.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  listByIotHub(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<CertificatesListByIotHubResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listByIotHubOperationSpec\n    ) as Promise<CertificatesListByIotHubResponse>;\n  }\n\n  /**\n   * Returns the certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<CertificatesGetResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      certificateName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getOperationSpec\n    ) as Promise<CertificatesGetResponse>;\n  }\n\n  /**\n   * Adds new or replaces existing certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param certificateDescription The certificate body.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    certificateDescription: CertificateDescription,\n    options?: CertificatesCreateOrUpdateOptionalParams\n  ): Promise<CertificatesCreateOrUpdateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      certificateName,\n      certificateDescription,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOrUpdateOperationSpec\n    ) as Promise<CertificatesCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Deletes an existing X509 certificate or does nothing if it does not exist.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    ifMatch: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      certificateName,\n      ifMatch,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Generates verification code for proof of possession flow. The verification code will be used to\n   * generate a leaf certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param options The options parameters.\n   */\n  generateVerificationCode(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    ifMatch: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<CertificatesGenerateVerificationCodeResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      certificateName,\n      ifMatch,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      generateVerificationCodeOperationSpec\n    ) as Promise<CertificatesGenerateVerificationCodeResponse>;\n  }\n\n  /**\n   * Verifies the certificate's private key possession by providing the leaf cert issued by the verifying\n   * pre uploaded certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param certificateVerificationBody The name of the certificate\n   * @param options The options parameters.\n   */\n  verify(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    ifMatch: string,\n    certificateVerificationBody: CertificateVerificationDescription,\n    options?: coreHttp.OperationOptions\n  ): Promise<CertificatesVerifyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      certificateName,\n      ifMatch,\n      certificateVerificationBody,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      verifyOperationSpec\n    ) as Promise<CertificatesVerifyResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst listByIotHubOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateListDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    201: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.certificateDescription,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifMatch1],\n  serializer\n};\nconst generateVerificationCodeOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/generateVerificationCode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateWithNonceDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifMatch1],\n  serializer\n};\nconst verifyOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/verify\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.certificateVerificationBody,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch1\n  ],\n  mediaType: \"json\",\n  serializer\n};\n","import { IotHub } from \"../operationsInterfaces\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\nimport { LROPoller, shouldDeserializeLRO, LROOperationState } from \"../lro\";\nimport { PollerLike } from \"@azure/core-lro\";\nimport { FailoverInput } from \"../models\";\n\n/** Class representing a IotHub. */\nexport class IotHubImpl implements IotHub {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Initialize a new instance of the class IotHub class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see\n   * https://aka.ms/manualfailover\n   * @param iotHubName Name of the IoT hub to failover\n   * @param resourceGroupName Name of the resource group containing the IoT hub resource\n   * @param failoverInput Region to failover to. Must be the Azure paired region. Get the value from the\n   *                      secondary location in the locations property. To learn more, see\n   *                      https://aka.ms/manualfailover/region\n   * @param options The options parameters.\n   */\n  async manualFailover(\n    iotHubName: string,\n    resourceGroupName: string,\n    failoverInput: FailoverInput,\n    options?: coreHttp.OperationOptions\n  ): Promise<\n    PollerLike<LROOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>\n  > {\n    const operationArguments: coreHttp.OperationArguments = {\n      iotHubName,\n      resourceGroupName,\n      failoverInput,\n      options: this.getOperationOptions(options, \"undefined\")\n    };\n    const sendOperation = (\n      args: coreHttp.OperationArguments,\n      spec: coreHttp.OperationSpec\n    ) => {\n      return this.client.sendOperationRequest(args, spec) as Promise<\n        coreHttp.RestResponse\n      >;\n    };\n\n    const initialOperationResult = await sendOperation(\n      operationArguments,\n      manualFailoverOperationSpec\n    );\n    return new LROPoller({\n      initialOperationArguments: operationArguments,\n      initialOperationSpec: manualFailoverOperationSpec,\n      initialOperationResult,\n      sendOperation\n    });\n  }\n\n  private getOperationOptions<TOptions extends coreHttp.OperationOptions>(\n    options: TOptions | undefined,\n    finalStateVia?: string\n  ): coreHttp.RequestOptionsBase {\n    const operationOptions: coreHttp.OperationOptions = options || {};\n    operationOptions.requestOptions = {\n      ...operationOptions.requestOptions,\n      shouldDeserialize: shouldDeserializeLRO(finalStateVia)\n    };\n    return coreHttp.operationOptionsToRequestOptionsBase(operationOptions);\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst manualFailoverOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.failoverInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","import { PrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\nimport {\n  PrivateLinkResourcesListResponse,\n  PrivateLinkResourcesGetResponse\n} from \"../models\";\n\n/** Class representing a PrivateLinkResources. */\nexport class PrivateLinkResourcesImpl implements PrivateLinkResources {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * List private link resources for the given IotHub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PrivateLinkResourcesListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listOperationSpec\n    ) as Promise<PrivateLinkResourcesListResponse>;\n  }\n\n  /**\n   * Get the specified private link resource for the given IotHub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param groupId The name of the private link resource\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    groupId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PrivateLinkResourcesGetResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      groupId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getOperationSpec\n    ) as Promise<PrivateLinkResourcesGetResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResources\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GroupIdInformation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","import { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\nimport { LROPoller, shouldDeserializeLRO, LROOperationState } from \"../lro\";\nimport { PollerLike } from \"@azure/core-lro\";\nimport {\n  PrivateEndpointConnectionsListResponse,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsUpdateResponse,\n  PrivateEndpointConnectionsDeleteResponse\n} from \"../models\";\n\n/** Class representing a PrivateEndpointConnections. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * List private endpoint connection properties\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PrivateEndpointConnectionsListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listOperationSpec\n    ) as Promise<PrivateEndpointConnectionsListResponse>;\n  }\n\n  /**\n   * Get private endpoint connection properties\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      privateEndpointConnectionName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getOperationSpec\n    ) as Promise<PrivateEndpointConnectionsGetResponse>;\n  }\n\n  /**\n   * Update the status of a private endpoint connection with the specified name\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param privateEndpointConnection The private endpoint connection with updated properties\n   * @param options The options parameters.\n   */\n  async update(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    privateEndpointConnection: PrivateEndpointConnection,\n    options?: coreHttp.OperationOptions\n  ): Promise<\n    PollerLike<\n      LROOperationState<PrivateEndpointConnectionsUpdateResponse>,\n      PrivateEndpointConnectionsUpdateResponse\n    >\n  > {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      privateEndpointConnectionName,\n      privateEndpointConnection,\n      options: this.getOperationOptions(options, \"undefined\")\n    };\n    const sendOperation = (\n      args: coreHttp.OperationArguments,\n      spec: coreHttp.OperationSpec\n    ) => {\n      return this.client.sendOperationRequest(args, spec) as Promise<\n        PrivateEndpointConnectionsUpdateResponse\n      >;\n    };\n\n    const initialOperationResult = await sendOperation(\n      operationArguments,\n      updateOperationSpec\n    );\n    return new LROPoller({\n      initialOperationArguments: operationArguments,\n      initialOperationSpec: updateOperationSpec,\n      initialOperationResult,\n      sendOperation\n    });\n  }\n\n  /**\n   * Delete private endpoint connection with the specified name\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param options The options parameters.\n   */\n  async delete(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<\n    PollerLike<\n      LROOperationState<PrivateEndpointConnectionsDeleteResponse>,\n      PrivateEndpointConnectionsDeleteResponse\n    >\n  > {\n    const operationArguments: coreHttp.OperationArguments = {\n      resourceGroupName,\n      resourceName,\n      privateEndpointConnectionName,\n      options: this.getOperationOptions(options, \"undefined\")\n    };\n    const sendOperation = (\n      args: coreHttp.OperationArguments,\n      spec: coreHttp.OperationSpec\n    ) => {\n      return this.client.sendOperationRequest(args, spec) as Promise<\n        PrivateEndpointConnectionsDeleteResponse\n      >;\n    };\n\n    const initialOperationResult = await sendOperation(\n      operationArguments,\n      deleteOperationSpec\n    );\n    return new LROPoller({\n      initialOperationArguments: operationArguments,\n      initialOperationSpec: deleteOperationSpec,\n      initialOperationResult,\n      sendOperation\n    });\n  }\n\n  private getOperationOptions<TOptions extends coreHttp.OperationOptions>(\n    options: TOptions | undefined,\n    finalStateVia?: string\n  ): coreHttp.RequestOptionsBase {\n    const operationOptions: coreHttp.OperationOptions = options || {};\n    operationOptions.requestOptions = {\n      ...operationOptions.requestOptions,\n      shouldDeserialize: shouldDeserializeLRO(finalStateVia)\n    };\n    return coreHttp.operationOptionsToRequestOptionsBase(operationOptions);\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"PrivateEndpointConnection\" }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.privateEndpointConnection,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","import * as coreHttp from \"@azure/core-http\";\nimport { IotHubClientOptionalParams } from \"./models\";\nimport { lroPolicy } from \"./lro\";\n\nconst packageName = \"@azure/arm-iothub\";\nconst packageVersion = \"1.0.0\";\n\nexport class IotHubClientContext extends coreHttp.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the IotHubClientContext class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The subscription identifier.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,\n    subscriptionId: string,\n    options?: IotHubClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    // Building the request policy fatories based on the passed factories and the\n    // any required factories needed by the client.\n    if (Array.isArray(options.requestPolicyFactories)) {\n      // When an array of factories is passed in, we'll just add the required factories,\n      // in this case lroPolicy(). It is important to note that passing an array of factories\n      // to a new client, bypasses core-http default factories. Just the pipelines provided will be run.\n      options.requestPolicyFactories = [\n        lroPolicy(),\n        ...options.requestPolicyFactories\n      ];\n    } else if (options.requestPolicyFactories) {\n      // When we were passed a requestPolicyFactories as a function, we'll create a new one that adds the factories provided\n      // in the options plus the required policies. When using this path, the pipelines passed to the client will be added to the\n      // default policies added by core-http\n      const optionsPolicies = options.requestPolicyFactories([lroPolicy()]) || [\n        lroPolicy()\n      ];\n      options.requestPolicyFactories = (defaultFactories) => [\n        ...optionsPolicies,\n        ...defaultFactories\n      ];\n    } else {\n      // In case no request policy factories were provided, we'll just need to create a function that will add\n      // the lroPolicy to the default pipelines added by core-http\n      options.requestPolicyFactories = (defaultFactories) => [\n        lroPolicy(),\n        ...defaultFactories\n      ];\n    }\n\n    super(credentials, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"https://management.azure.com\";\n\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-03-03-preview\";\n  }\n}\n","import * as coreHttp from \"@azure/core-http\";\nimport {\n  OperationsImpl,\n  IotHubResourceImpl,\n  ResourceProviderCommonImpl,\n  CertificatesImpl,\n  IotHubImpl,\n  PrivateLinkResourcesImpl,\n  PrivateEndpointConnectionsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  IotHubResource,\n  ResourceProviderCommon,\n  Certificates,\n  IotHub,\n  PrivateLinkResources,\n  PrivateEndpointConnections\n} from \"./operationsInterfaces\";\nimport { IotHubClientContext } from \"./iotHubClientContext\";\nimport { IotHubClientOptionalParams } from \"./models\";\n\nexport class IotHubClient extends IotHubClientContext {\n  /**\n   * Initializes a new instance of the IotHubClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The subscription identifier.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,\n    subscriptionId: string,\n    options?: IotHubClientOptionalParams\n  ) {\n    super(credentials, subscriptionId, options);\n    this.operations = new OperationsImpl(this);\n    this.iotHubResource = new IotHubResourceImpl(this);\n    this.resourceProviderCommon = new ResourceProviderCommonImpl(this);\n    this.certificates = new CertificatesImpl(this);\n    this.iotHub = new IotHubImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n  }\n\n  operations: Operations;\n  iotHubResource: IotHubResource;\n  resourceProviderCommon: ResourceProviderCommon;\n  certificates: Certificates;\n  iotHub: IotHub;\n  privateLinkResources: PrivateLinkResources;\n  privateEndpointConnections: PrivateEndpointConnections;\n}\n"],"names":["IotHubDescriptionMapper","TagsResourceMapper","EventHubConsumerGroupBodyDescriptionMapper","OperationInputsMapper","TestAllRoutesInputMapper","TestRouteInputMapper","ExportDevicesRequestMapper","ImportDevicesRequestMapper","CertificateDescriptionMapper","CertificateVerificationDescriptionMapper","FailoverInputMapper","PrivateEndpointConnectionMapper","coreHttp.operationOptionsToRequestOptionsBase","nextLink","coreHttp.Serializer","Mappers.OperationListResult","Mappers.ErrorDetails","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","BaseRequestPolicy","extendStatics","__extends","__awaiter","__generator","delay","RestError","resourceGroupName","resourceName","eventHubEndpointName","iotHubName","iotHubDescription","iotHubTags","name","consumerGroupBody","jobId","operationInputs","input","keyName","exportDevicesParameters","importDevicesParameters","serializer","Mappers.IotHubDescription","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.resourceName","Parameters.iotHubDescription","Parameters.contentType","Parameters.ifMatch","Parameters.iotHubTags","Mappers.IotHubDescriptionListResult","Mappers.RegistryStatistics","Mappers.IotHubSkuDescriptionListResult","Mappers.EventHubConsumerGroupsListResult","Parameters.eventHubEndpointName","Mappers.EventHubConsumerGroupInfo","Parameters.name","Parameters.consumerGroupBody","Mappers.JobResponseListResult","Mappers.JobResponse","Parameters.jobId","Mappers.IotHubQuotaMetricInfoListResult","Mappers.EndpointHealthDataListResult","Parameters.iotHubName","Mappers.IotHubNameAvailabilityInfo","Parameters.operationInputs","Mappers.TestAllRoutesResult","Parameters.input","Mappers.TestRouteResult","Parameters.input1","Mappers.SharedAccessSignatureAuthorizationRuleListResult","Mappers.SharedAccessSignatureAuthorizationRule","Parameters.keyName","Parameters.exportDevicesParameters","Parameters.importDevicesParameters","Mappers.UserSubscriptionQuotaListResult","certificateName","getOperationSpec","certificateDescription","createOrUpdateOperationSpec","ifMatch","deleteOperationSpec","certificateVerificationBody","Mappers.CertificateListDescription","Mappers.CertificateDescription","Parameters.certificateName","Parameters.certificateDescription","Parameters.ifMatch1","Mappers.CertificateWithNonceDescription","Parameters.certificateVerificationBody","failoverInput","Parameters.failoverInput","listOperationSpec","groupId","Mappers.PrivateLinkResources","Mappers.GroupIdInformation","Parameters.groupId","privateEndpointConnectionName","privateEndpointConnection","updateOperationSpec","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnectionName","Parameters.privateEndpointConnection","coreHttp.getDefaultUserAgentValue","coreHttp.ServiceClient"],"mappings":"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"}